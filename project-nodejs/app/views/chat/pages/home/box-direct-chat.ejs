<% include ./../../helpers/show-message-chat %>
<div class="box box-primary direct-chat direct-chat-primary">
    <div class="box-header with-border">
        <h3 class="box-title">Direct Chat</h3>
    </div>
    <!-- /.box-header -->
    <div class="box-body">
        <!-- Conversations are loaded here -->
        <div class="direct-chat-messages" id="area-list-message">
            <%- showMessageChat(itemsChat, userInfo) %>
        </div>
    </div>
    <!-- /.box-body -->
    <div class="box-footer">
        <form action="#" method="post" id="form-chat">
            <div class="input-group">
                <input type="text" name="message" placeholder="Type Message ..." id="message" class="form-control emojionearea-editor">
                <span class="input-group-btn">
                    <button type="submit" class="btn btn-primary btn-flat">Send</button>
                </span>
            </div>
        </form>
    </div>
    <script id="template-chat-message" type="x-tmpl-mustache">
        <div class="direct-chat-msg {{ typeShow }}">
            <div class="direct-chat-info clearfix">
                <span class="direct-chat-name {{ classUsername }}">{{ username }}</span>
                <span class="direct-chat-timestamp {{ classCreated }}">{{ created }}</span>
            </div>
            <img class="direct-chat-img" src="uploads/users/{{ avatar }}"
                alt="{{ username }}">
            <div class="direct-chat-text">
                {{ content }}
            </div>
        </div>
    </script>
</div>
<script type="text/javascript">
    $(function() {
        let $elmInputMessage  = $('input#message');
        let $elmInputUsername = $('input[name="username"]');
        let $elmInputAvatar   = $('input[name="avatar"]');
        let $elmFormChat      = $('form#form-chat');
        let $elmListMessage   = $('div#area-list-message');
        let timeoutObj;

        let emojioneArea = $elmInputMessage.emojioneArea();

        let socket              = io.connect('http://localhost:8181');

        socket.on("SERVER_RETURN_ALL_MESSAGE", (data) => {
            let typeShow = "";
            let classUsername = "pull-left";
            let classCreated = "pull-right";

            if($elmInputUsername.val() == data.username ){
                typeShow        = "right";
                classUsername   = "pull-right";
                classCreated    = "pull-left";
            }

            var template = $('#template-chat-message').html();
            var rendered = Mustache.render(template, { 
                typeShow,
                classUsername,
                username: data.username,
                classCreated,
                created: data.created,
                avatar: data.avatar,
                content: data.content
            });

            $elmListMessage.append(rendered);
        });

        socket.on("SERVER_RETURN_ERROR", (data) => {
            let xhtmlNotify = `<div class="alert alert-danger alert-dismissible" id="area-notify">
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">Ã—</button>
                                <strong>Error: </strong>${data.content}
                            </div>`;
            $(xhtmlNotify).insertBefore($elmFormChat);
        });

        socket.on("SERVER_SEND_USER_TYPING", (data) => {
            if(data.showTyping) {
                let xhtmlUserTyping = `<p class="show-typing">${data.username} is typing ...</p>`;
                $(xhtmlUserTyping).insertBefore($elmFormChat);
            } else {
                $("p.show-typing").remove();
            }
        });

        // CLIENT SEND MESSAGE
        $elmFormChat.submit(function() {
            socket.emit('CLIENT_SEND_ALL_MESSAGE', {
                content: $elmInputMessage.val(),
                username: $elmInputUsername.val(),
                avatar: $elmInputAvatar.val()
            });

            $elmInputMessage.val('');
            emojioneArea.data("emojioneArea").setText('');
            $("div#area-notify").remove();
            return false;
        });

        function cancelTyping() {
            socket.emit('CLIENT_SEND_TYPING', { username: $elmInputUsername.val(), showTyping: false });
        }

        $(document).on('keyup', '.emojionearea-editor', function() {
            clearTimeout(timeoutObj);
            timeoutObj = setTimeout(cancelTyping, 2000);
            socket.emit('CLIENT_SEND_TYPING', { username: $elmInputUsername.val(), showTyping: true });
        })
    })
</script> 